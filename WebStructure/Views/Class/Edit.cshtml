@model ClassViewModel

@{
    ViewData["Title"] = "Edit";
}
@if (Model.Messages.Count > 0)
{
    <div class="alert-danger">
        @foreach (var error in Model.Messages)
        {
            <span>
                @if (!string.IsNullOrWhiteSpace(error.CustomMessage))
                {
                    @error.CustomMessage
                }
                else if (Model.IsError)
                {
                    @error.ExceptionMessage
                }
            </span>
        }
    </div>
}
<div>
    <div class="row">
        <div class="card-header d-flex justify-content-between">
            <div class="header-title">
                <h4 class="card-title">Add Classes</h4>
            </div>
        </div>
        <div>
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Class.Id" readonly="readonly" class="form-control" />
                <input type="hidden" asp-for="Class.CreatedOn" class="form-control" />
                <input type="hidden" asp-for="Class.CreatedBy" class="form-control" />
                <div class="form-group">
                    <label class="form-label">Class Name</label>
                    <input type="text" asp-for="Class.ClassName" class="form-control" placeholder="Enter Name">
                </div>
                <div class="form-group">
                    <label class="form-label">Class Details</label>
                    <input type="text" asp-for="Class.ClassDetails" class="form-control" placeholder="Enter Details">
                </div>
                <div class="form-group">
                    <label class="form-label">Grade</label>
                    <input type="text" asp-for="Class.Grade" class="form-control" placeholder="Enter Grade">
                </div>
                <div class="form-group">
                    <label class="form-label">Max Size</label>
                    <input type="number" asp-for="Class.MaxSize" min="1"class="form-control">
                </div>
                <div class="form-group">
                    <label class="form-label">Class Timing</label>
                    <input type="time" class="form-control" asp-for="Class.Timing">
                </div>
                <button type="submit" value="Save" class="btn btn-primary">Submit</button>
                <a asp-controller="Class" asp-action="Index" class="btn btn-danger">cancel</a>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
